name: Build Cross-Platform Executables

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: |
        python -m PyInstaller --onefile --windowed --icon="icon.ico" --add-data="icon.ico;." converter.py

    # --- macOS Build Steps ---
    - name: Build macOS App
      if: matrix.os == 'macos-latest'
      run: |
        # Use the built-in macOS tools to create the .icns file
        mkdir icon.iconset
        sips -z 256 256 icon.png --out icon.iconset/icon_256x256.png
        iconutil -c icns icon.iconset
        
        # Build the application
        python3 -m PyInstaller --windowed --icon="icon.icns" --add-data="icon.icns:." converter.py

    - name: Install create-dmg (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install create-dmg

    - name: Create DMG (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        create-dmg \
          --volname "CSV to PDF Converter" \
          --window-pos 200 120 \
          --window-size 600 400 \
          --icon-size 100 \
          --app-drop-link 450 185 \
          "dist/CSV-to-PDF-Converter.dmg" \
          "dist/converter.app"

    # --- Artifact Upload Steps ---
    - name: Upload Windows Artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Converter-EXE
        path: dist/*.exe

    - name: Upload macOS Artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macOS-Converter-DMG
        path: dist/*.dmg
